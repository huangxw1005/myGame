//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SceneManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SceneManager), typeof(System.Object));
		L.RegFunction("GetInstance", GetInstance);
		L.RegFunction("Clear", Clear);
		L.RegFunction("GotoScene", GotoScene);
		L.RegFunction("New", _CreateSceneManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CurrentSceneID", get_CurrentSceneID, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSceneManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SceneManager obj = new SceneManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SceneManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SceneManager o = SceneManager.GetInstance();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SceneManager obj = (SceneManager)ToLua.CheckObject(L, 1, typeof(SceneManager));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GotoScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SceneManager obj = (SceneManager)ToLua.CheckObject(L, 1, typeof(SceneManager));
			SceneID arg0 = (SceneID)ToLua.CheckObject(L, 2, typeof(SceneID));
			obj.GotoScene(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentSceneID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SceneManager obj = (SceneManager)o;
			SceneID ret = obj.CurrentSceneID;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurrentSceneID on a nil value" : e.Message);
		}
	}
}

