//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PlayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Player), typeof(Character));
		L.RegFunction("ActAttack1", ActAttack1);
		L.RegFunction("OnAnimationComplete", OnAnimationComplete);
		L.RegFunction("AutoRotateToEnemy", AutoRotateToEnemy);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActAttack1(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Player obj = (Player)ToLua.CheckObject(L, 1, typeof(Player));
			obj.ActAttack1();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAnimationComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Player obj = (Player)ToLua.CheckObject(L, 1, typeof(Player));
			obj.OnAnimationComplete();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AutoRotateToEnemy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Player obj = (Player)ToLua.CheckObject(L, 1, typeof(Player));
			obj.AutoRotateToEnemy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

